"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _keyFormatter = require("../utils/keyFormatter");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var JsonApiEntity = /*#__PURE__*/function () {
  function JsonApiEntity(payload, repo) {
    var _this = this;

    _classCallCheck(this, JsonApiEntity);

    this.payload = payload;
    this.repo = repo;
    Object.entries(payload.attributes || {}).forEach(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
          name = _ref2[0],
          value = _ref2[1];

      Object.defineProperty(_this, (0, _keyFormatter.camelize)(name), {
        enumerable: true,
        value: (0, _keyFormatter.camelizeKeys)(value)
      });
    });
    Object.entries(payload.relationships || {}).forEach(function (_ref3) {
      var _ref4 = _slicedToArray(_ref3, 2),
          name = _ref4[0],
          value = _ref4[1];

      Object.defineProperty(_this, (0, _keyFormatter.camelize)(name), {
        enumerable: true,
        get: function get() {
          var linkage = value.data;

          if (Array.isArray(linkage)) {
            return linkage.map(function (item) {
              return repo.findEntity(item.type, item.id);
            });
          }

          if (linkage) {
            return repo.findEntity(linkage.type, linkage.id);
          }

          return null;
        }
      });
    });
  }

  _createClass(JsonApiEntity, [{
    key: "id",
    get: function get() {
      return this.payload.id;
    }
  }, {
    key: "type",
    get: function get() {
      return this.payload.type;
    }
  }, {
    key: "meta",
    get: function get() {
      return this.payload.meta ? (0, _keyFormatter.camelizeKeys)(this.payload.meta) : {};
    }
  }]);

  return JsonApiEntity;
}();

exports["default"] = JsonApiEntity;