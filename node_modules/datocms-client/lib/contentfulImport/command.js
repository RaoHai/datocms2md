"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _appClient = _interopRequireDefault(require("./appClient"));

var _getContentfulData = _interopRequireDefault(require("./getContentfulData"));

var _destroyExistingModels = _interopRequireDefault(require("./destroyExistingModels"));

var _destroyExistingAssets = _interopRequireDefault(require("./destroyExistingAssets"));

var _removeAllValidators = _interopRequireDefault(require("./removeAllValidators"));

var _setLocales = _interopRequireDefault(require("./setLocales"));

var _createModels = _interopRequireDefault(require("./createModels"));

var _createFields = _interopRequireDefault(require("./createFields"));

var _createRecords = _interopRequireDefault(require("./createRecords"));

var _addValidationsOnField = _interopRequireDefault(require("./addValidationsOnField"));

var _linkRecords = _interopRequireDefault(require("./linkRecords"));

var _createUploads = _interopRequireDefault(require("./createUploads"));

var _publishRecords = _interopRequireDefault(require("./publishRecords"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

var _default = /*#__PURE__*/function () {
  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref) {
    var contentfulToken, contentfulSpaceId, datoCmsToken, datoCmsEnvironment, skipContent, contentType, client, datoClient, contentfulData, itemTypes, fieldsMapping, _yield$createRecords, contentfulRecordMap, recordsToPublish, linkedRecords;

    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            contentfulToken = _ref.contentfulToken, contentfulSpaceId = _ref.contentfulSpaceId, datoCmsToken = _ref.datoCmsToken, datoCmsEnvironment = _ref.datoCmsEnvironment, skipContent = _ref.skipContent, contentType = _ref.contentType;
            _context.next = 3;
            return (0, _appClient["default"])(contentfulToken, contentfulSpaceId, datoCmsToken, datoCmsEnvironment);

          case 3:
            client = _context.sent;
            datoClient = client.dato;
            _context.next = 7;
            return (0, _getContentfulData["default"])({
              client: client.contentful,
              skipContent: skipContent,
              contentType: contentType
            });

          case 7:
            contentfulData = _context.sent;
            _context.next = 10;
            return (0, _removeAllValidators["default"])({
              datoClient: datoClient,
              contentfulData: contentfulData
            });

          case 10:
            _context.next = 12;
            return (0, _destroyExistingModels["default"])({
              datoClient: datoClient,
              contentfulData: contentfulData
            });

          case 12:
            _context.next = 14;
            return (0, _destroyExistingAssets["default"])({
              datoClient: datoClient
            });

          case 14:
            _context.next = 16;
            return (0, _setLocales["default"])({
              datoClient: datoClient,
              contentfulData: contentfulData
            });

          case 16:
            _context.next = 18;
            return (0, _createModels["default"])({
              datoClient: datoClient,
              contentfulData: contentfulData
            });

          case 18:
            itemTypes = _context.sent;
            _context.next = 21;
            return (0, _createFields["default"])({
              itemTypes: itemTypes,
              datoClient: datoClient,
              contentfulData: contentfulData
            });

          case 21:
            fieldsMapping = _context.sent;

            if (skipContent) {
              _context.next = 37;
              break;
            }

            _context.next = 25;
            return (0, _createRecords["default"])({
              itemTypes: itemTypes,
              fieldsMapping: fieldsMapping,
              datoClient: datoClient,
              contentfulData: contentfulData
            });

          case 25:
            _yield$createRecords = _context.sent;
            contentfulRecordMap = _yield$createRecords.contentfulRecordMap;
            recordsToPublish = _yield$createRecords.recordsToPublish;
            _context.next = 30;
            return (0, _createUploads["default"])({
              fieldsMapping: fieldsMapping,
              itemTypes: itemTypes,
              datoClient: datoClient,
              contentfulData: contentfulData,
              contentfulRecordMap: contentfulRecordMap
            });

          case 30:
            _context.next = 32;
            return (0, _publishRecords["default"])({
              recordIds: recordsToPublish,
              datoClient: datoClient
            });

          case 32:
            _context.next = 34;
            return (0, _linkRecords["default"])({
              fieldsMapping: fieldsMapping,
              datoClient: datoClient,
              contentfulData: contentfulData,
              contentfulRecordMap: contentfulRecordMap
            });

          case 34:
            linkedRecords = _context.sent;
            _context.next = 37;
            return (0, _publishRecords["default"])({
              recordIds: linkedRecords,
              datoClient: datoClient
            });

          case 37:
            _context.next = 39;
            return (0, _addValidationsOnField["default"])({
              itemTypes: itemTypes,
              fieldsMapping: fieldsMapping,
              datoClient: datoClient,
              contentfulData: contentfulData
            });

          case 39:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function (_x) {
    return _ref2.apply(this, arguments);
  };
}();

exports["default"] = _default;