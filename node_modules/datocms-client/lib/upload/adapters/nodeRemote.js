"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = nodeUrl;

var _tmp = _interopRequireDefault(require("tmp"));

var _axios = _interopRequireDefault(require("axios"));

var _fs = _interopRequireDefault(require("fs"));

var _path = _interopRequireDefault(require("path"));

var _url = _interopRequireDefault(require("url"));

var _decode = _interopRequireDefault(require("../../utils/decode"));

var _nodeLocal = _interopRequireDefault(require("./nodeLocal"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function nodeUrl(client, fileUrl) {
  return new Promise(function (resolve, reject) {
    _tmp["default"].dir(function (err, dir, cleanupCallback) {
      if (err) {
        reject(err);
      }

      var encodedFileUrl = (0, _decode["default"])(fileUrl);
      return (0, _axios["default"])({
        url: encodedFileUrl,
        maxRedirects: 10,
        responseType: 'arraybuffer'
      }).then(function (response) {
        /* eslint-disable no-underscore-dangle */
        var redirectedUrl = response.request._redirectable._redirectCount > 0 ? response.request._redirectable._currentUrl : response.config.url;
        /* eslint-enable no-underscore-dangle */

        var _url$parse = _url["default"].parse((0, _decode["default"])(redirectedUrl)),
            pathname = _url$parse.pathname;

        var filePath = _path["default"].join(dir, _path["default"].basename(pathname));

        _fs["default"].writeFileSync(filePath, Buffer.from(response.data));

        return (0, _nodeLocal["default"])(client, filePath).then(function (result) {
          _fs["default"].unlinkSync(filePath);

          cleanupCallback();
          resolve(result);
        });
      })["catch"](function (error) {
        if (error.response) {
          reject(new Error("Invalid status code for ".concat(encodedFileUrl, ": ").concat(error.response.status)));
        } else {
          reject(error);
        }
      });
    });
  });
}